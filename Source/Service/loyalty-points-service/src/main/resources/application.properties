#exposing refresh endpoint so that whenevr configuration changes in git,
#post /actuator/refresh endpoint can be called for the client microservices
#to update the configuration
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=info,health,refresh,restart


#disabling health check so that client doesnt try to load properties from sprint config server every
# 5 minutes (should not be done in production)
health.config.enabled=false

server.port=8801
server.servlet.context-path=/v1/loyalty/

spring.data.mongodb.uri=mongodb+srv://atlantisuser:atlantis123@cluster0.6xkk4.mongodb.net/atlantis_loyalty?retryWrites=true&w=majority

logging.level.root=INFO
log4j.category.org.springframework.data.mongodb=DEBUG
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %40.40c:%4L - %m%n

atlantis.keycloak.base.url=http://13.59.210.109:8080
atlantis.keycloak.atlantis.realm=Atlantis-Loyalty-Platform
atlantis.keycloak.openid.base.url=${atlantis.keycloak.base.url}/auth/realms/${atlantis.keycloak.atlantis.realm}/protocol/openid-connect
atlantis.keycloak.token.url=${atlantis.keycloak.openid.base.url}/token

atlantis.loyalty-points-enduser-client.client-id=loyalty-points-enduser-client
atlantis.loyalty-points-enduser-client.client-secret=781d0855-f27f-43ae-ba7f-7fbf7cb09985

# For Keycloak auth provider
keycloak.realm=${atlantis.keycloak.atlantis.realm}
##the client-id of the application
keycloak.resource=${atlantis.loyalty-points-enduser-client.client-id}
keycloak.auth-server-url=${atlantis.keycloak.base.url}/auth
#none, external, all
keycloak.ssl-required=none
#Optional. prevents the application from sending credentials to the Keycloak server (false is the default value). We want to set it to true whenever we use public clients instead of confidential.
keycloak.public-client=false

keycloak.token-store=cookie
keycloak.bearer-only=true
keycloak.credentials.secret=${atlantis.loyalty-points-enduser-client.client-secret}

keycloak.securityConstraints[0].authRoles[0]=ENDUSER
keycloak.securityConstraints[0].authRoles[1]=THIRDPARTY
keycloak.securityConstraints[0].authRoles[2]=REDEEM_POINTS

keycloak.securityConstraints[0].securityCollections[0].name=loyalty points enduser endpoints
keycloak.securityConstraints[0].securityCollections[0].patterns[0] = /loyaltypoints/loyaltyid/*
keycloak.securityConstraints[0].securityCollections[0].patterns[1] = /loyaltypoints/loyaltyid/purchase

keycloak.securityConstraints[0].securityCollections[1].name=loyalty points transaction managment
keycloak.securityConstraints[0].securityCollections[1].patterns[0] = /transactions/loyaltyid/*

keycloak.securityConstraints[0].securityCollections[2].name=loyalty points acquire
keycloak.securityConstraints[0].securityCollections[2].patterns[0] = /loyaltypoints/aqcuire

keycloak.securityConstraints[0].securityCollections[3].name=loyalty points redeem
keycloak.securityConstraints[0].securityCollections[3].patterns[0] = /loyaltypoints/redeem

keycloak.policy-enforcer-config.paths[0].path=/loyaltypoints/loyaltyid/*
keycloak.policy-enforcer-config.paths[0].methods[0].method=GET
keycloak.policy-enforcer-config.paths[0].methods[0].scopes[0]=view

keycloak.policy-enforcer-config.paths[1].path=/transactions/loyaltyid/*
keycloak.policy-enforcer-config.paths[1].methods[0].method=GET
keycloak.policy-enforcer-config.paths[1].methods[0].scopes[0]=view

keycloak.policy-enforcer-config.paths[2].path=/loyaltypoints/purchase
keycloak.policy-enforcer-config.paths[2].methods[0].method=POST
keycloak.policy-enforcer-config.paths[2].methods[0].scopes[0]=purchase

keycloak.policy-enforcer-config.paths[3].path=/loyaltypoints/acquire
keycloak.policy-enforcer-config.paths[3].methods[0].method=POST
keycloak.policy-enforcer-config.paths[3].methods[0].scopes[0]=acquire

keycloak.policy-enforcer-config.paths[4].path=/loyaltypoints/redeem
keycloak.policy-enforcer-config.paths[4].methods[0].method=POST
keycloak.policy-enforcer-config.paths[4].methods[0].scopes[0]=redeem

swagger.auth.token-url = ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/token/
swagger.auth.client-id = swagger
